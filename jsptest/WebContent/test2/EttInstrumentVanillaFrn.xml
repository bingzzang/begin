<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="EttInstrumentVanillaFrn">

    <!-- ########################### typeAlias Definition ########################### -->
    <typeAlias alias="vanillaFrnInfo" type="com.fistglobal.riskcraft.market.batch.domain.instrument.VanillaFrnInfo"/>
    <typeAlias alias="vanillaFrnData" type="com.fistglobal.riskcraft.market.batch.domain.instrument.VanillaFrnData"/>
    <typeAlias alias="vanillaFrnOptionSchedule" type="com.fistglobal.riskcraft.market.batch.domain.instrument.VanillaFrnOptionSchedule"/>
    <typeAlias alias="vanillaFrnRangeNoteSchedule" type="com.fistglobal.riskcraft.market.batch.domain.instrument.VanillaFrnRangeNoteSchedule"/>
    <typeAlias alias="vanillaFrnRedemption" type="com.fistglobal.riskcraft.market.batch.domain.instrument.VanillaFrnRedemption"/>

     <!-- ########################### sql       Definition ########################### -->
     <!-- ########################### resultMap Definition ########################### -->
      <!-- ########################### CRUD      Definition ########################### -->
     <select id="getVanillaFrnInfoList" parameterClass="map" resultClass="vanillaFrnInfo">
     	<!-- 2011.4.28 FRN ett 변경 -->
<!-- 
     	SELECT
     		A.CODE						as	key
     	,	A.CODE						as	instrumentCode
     	,	A.NAME						as	instrumentName
		,	CASE WHEN A.INTERESTTYPE IN ('21','29') THEN '1' /* Simple FRN */
			     WHEN A.INTERESTTYPE = 'FIFL' THEN 'C'
			     WHEN A.INTERESTTYPE = 'SUFL' THEN 'D'
			     WHEN A.INTERESTTYPE = '3' THEN '1'
			END as  frnTypeCode
     	,	A.ISSUECODE					as	issuerCd
     	,	A.ISSUEDATE					as	issueDt
     	,	A.REPAYDATE					as	mrtyDt
     	,	A.ISSUEAMOUNT				as	principal
     	,	DECODE(LENGTH(A.MONEYTYPE),8,SUBSTR(A.MONEYTYPE,6,3),A.MONEYTYPE) 
     									as ccyCd
     	,	NVL(B.CD,A.INTERESTMONTH) 	as	couponFreqCd
     	,	A.FIRSTINTERESTDATE			as	firstCouponDt
     	,	null						as	lastCouponDt
     	,	A.ADDITIONRATE / 100		as	couponIrcSpread
     	,	1							as	leverage
     	,	#couponIrcCd#				as	couponIrcCd
     	,	#couponIrcMrtyCd#			as	couponIrcMrtyCd
	    ,   '1'                         as  couponIrcTypeCode
	    ,   NULL                        as  couponIrcCouponFreqCode
	    ,   CASE WHEN INTERESTTYPE = 'FIFL' THEN DEFEREDTERM END as  deferEndDate
	    ,   CASE WHEN INTERESTTYPE = 'FIFL' THEN FACEINTEREST / 100 END as  deferPayCoupon
	    ,   NULL                        as  inRangeCoupon
	    ,   NULL                        as  outRangeCoupon
    	,NVL(C.CD, CASE WHEN A.FLOWIND='11' THEN #ncrBondTypePeLq# ELSE #normalBondCd# END)
	    	                            as issueTypeCd
<! - 
		,CASE
			WHEN A.ISSUETYPE = '1' OR A.FLOWIND IS NOT NULL THEN '$ncrBondTypePeLq$'
			ELSE '$normalBondCd$'
		 END								as issueTypeCd
 ->
	    ,   CASE
	    		WHEN A.FRNCAP IS NULL 		AND A.FRNFLOOR IS NULL 		THEN '4'
	    		WHEN A.FRNCAP IS NOT NULL 	AND A.FRNFLOOR IS NULL 		THEN '1'                         
	    		WHEN A.FRNCAP IS NULL 		AND A.FRNFLOOR IS NOT NULL 	THEN '2'                         
	    		WHEN A.FRNCAP IS NOT NULL 	AND A.FRNFLOOR IS NOT NULL 	THEN '3'
	    	END					    	as  capFloorTypeCode 
     	,	A.FRNCAP / 100				as	cap
     	,	A.FRNFLOOR / 100			as	floor
        ,   NULL                as couponAverageDayCount
        ,   '0'					as  optionTypeCd
        ,   NULL				as  firstExerciseDt
        ,   NULL				as  exerciseFreqCd
        ,   'N'					as  inArrearsYn
        ,   NULL				as  dayCountConvention
        ,	NULL				as	globalFloorReturn 
        ,	A.FRNCAP	/100	as	capCoupon
        ,	A.FRNFLOOR	/100	as	floorCoupon        
     	FROM
     	 $rasAccount$.IF_BOND_INFO A
     	,SYS_CD_MAP B,SYS_CD_MAP C
     	WHERE
     	   	TO_CHAR(A.INTERESTMONTH) = B.SRC_CD (+)
     	AND	B.TYPE 		(+) = #interestMonthCdType#
     	AND A.ISSUETYPE		= C.SRC_CD (+) AND C.TYPE(+) = #issueTypeCdType#
     	AND	A.TDATE 		= #processDate#
     	AND (A.INTERESTTYPE IN ('21','29') OR A.INTERESTTYPE IN ('FIFL','SUFL'))
    UNION ALL
-->
     	SELECT
     		A.CODE						as	key
     	,	A.CODE						as	instrumentCode
     	,	A.NAME						as	instrumentName
     	,   DECODE(A.FRNTYPE,'4','3','5','3', A.FRNTYPE) as  frnTypeCode
     	,	NULL    					as	issuerCd
     	,	A.ISSUEDATE					as	issueDt
     	,	A.MATURITYDATE				as	mrtyDt
     	,	A.PRINCIPAL					as	principal
     	,	SUBSTR(A.MONEYTYPE,6,3)		as	ccyCd
     	,	NVL(D.CD,A.INTERESTTERM)	as	couponFreqCd
     	,	A.FIRSTPAYDATE			    as	firstCouponDt
     	,	A.LASTPAYDATE				as	lastCouponDt
     	,	0							as	couponIrcSpread
     	,	1							as	leverage
        ,   NVL(A.FLOATCURVEID, #couponIrcCd#)
                                        as couponIrcCd
     	,	C.CD 						as	couponIrcMrtyCd
	    ,   DECODE(A.FRNTYPE,'4','1','5','2', '1')  as  couponIrcTypeCode
	    ,   A.ANNUITYFREQUENCY		    as  couponIrcCouponFreqCode
	    ,   B.NEXTCOUPONDATE            as  deferEndDate
	    ,   B.NEXTCOUPONRATE / 100      as  deferPayCoupon
	    ,   A.INCOUPONRATE / 100        as  inRangeCoupon
	    ,   A.OUTCOUPONRATE / 100       as  outRangeCoupon
     	,	#normalBondCd#			as	issueTypeCd	/*일반 채권 */
	    ,   
	    CASE 
	    	WHEN A.UPPERCONDITIONRATE IS NULL 		AND A.LOWERCONDITIONRATE IS NULL 		THEN '4'
			WHEN A.UPPERCONDITIONRATE IS NOT NULL 	AND A.LOWERCONDITIONRATE IS NULL 		THEN '1'
			WHEN A.UPPERCONDITIONRATE IS NULL		AND A.LOWERCONDITIONRATE IS NOT NULL 	THEN '2'
			WHEN A.UPPERCONDITIONRATE IS NULL		AND A.LOWERCONDITIONRATE IS NOT NULL	THEN '3'
		END  as  capFloorTypeCode 
     	,	A.UPPERCONDITIONRATE /100	as	cap
     	,	A.LOWERCONDITIONRATE /100	as	floor
        ,   NULL                        as couponAverageDayCount
        ,   '0'					as  optionTypeCd
        ,   NULL				as  firstExerciseDt
        ,   NULL				as  exerciseFreqCd
        ,   'N'					as  inArrearsYn
        ,   NULL				as  dayCountConvention
        ,	NULL				as	globalFloorReturn 
        ,	A.UPPERCONDITIONRATE	/100	as	capCoupon
        ,	A.LOWERCONDITIONRATE	/100	as	floorCoupon
     	FROM
     	 $rasAccount$.IF_RANGE_ACCRUAL_NOTE_INFO A
     	,$rasAccount$.IF_RANGE_ACCRUAL_NOTE_DATA B
     	,SYS_CD_MAP C
     	,SYS_CD_MAP D
     	WHERE
     	   	A.TDATE		= B.TDATE (+) AND A.CODE = B.CODE(+)
     	AND	TO_CHAR(ROUND(NVL(A.FLOATTENOR,0)*12*30)) = C.SRC_CD (+) AND C.TYPE 		(+) = '104' /*만기 */
     	AND	TO_CHAR(A.INTERESTTERM) = D.SRC_CD (+) AND D.TYPE (+) = #interestMonthCdType# /*이자지급주기 */
     	AND	A.TDATE 		= #processDate#
    <!-- IF_FRN_INFO 추가 2010/08/24 -->
    UNION ALL
        SELECT A.CODE                   as key
              ,A.CODE                   as instrumentCode
              ,A.NAME                   as instrumentName
              ,CASE WHEN COUPON_AVG_CNT IS NULL THEN '1' ELSE '4' END as frnTypeCode
              ,NULL                     as issuerCd
              ,A.ISSUEDATE              as issueDt
              ,A.MATURITYDATE           as mrtyDt
              ,A.PRINCIPAL              as principal
              ,CASE WHEN LENGTH(A.MONEYTYPE)=3 THEN A.MONEYTYPE
                    ELSE SUBSTR(A.MONEYTYPE,6,3)
               END                      as ccyCd
              ,NVL(C.CD,A.INTERESTTERM) as couponFreqCd
              ,A.FIRSTPAYDATE           as firstCouponDt
              ,A.LASTPAYDATE            as lastCouponDt
              ,A.SPREAD                 as couponIrcSpread
     		  ,TO_NUMBER(CASE WHEN A.FRNCLASS = '2' THEN '-1' ELSE '1' END)
     		  							as	leverage
              ,NVL(A.FLOATCURVEID, #couponIrcCd#)
                                        as couponIrcCd
              ,B.CD                     as couponIrcMrtyCd
              ,'1'                      as couponIrcTypeCode
              ,NULL                     as couponIrcCouponFreqCode
              ,NULL                     as deferEndDate
              ,NULL                     as deferPayCoupon
              ,NULL                     as inRangeCoupon
              ,NULL                     as outRangeCoupon
              ,#normalBondCd#           as issueTypeCd /*일반 채권 */
              ,CASE WHEN A.FRNCLASS='1' THEN '4'
                    WHEN A.FRNCLASS='3' THEN '1'
                    WHEN A.FRNCLASS='4' THEN '2'
                    WHEN A.FRNCLASS='5' THEN '3'
               END                      as capFloorTypeCode
              ,A.CAPRATE                as cap
              ,A.FLOORRATE              as floor
              ,A.COUPON_AVG_CNT         as couponAverageDayCount
		      ,   '0'					as  optionTypeCd
		      ,   NULL					as  firstExerciseDt
		      ,   NULL					as  exerciseFreqCd
		      ,   'N'					as  inArrearsYn
		      ,   NULL					as  dayCountConvention
		      ,	  NULL					as	globalFloorReturn 
		      ,	  A.CAPRATE	/100		as	capCoupon
		      ,	  A.FLOORRATE /100		as	floorCoupon		      
          FROM $rasAccount$.IF_FRN_INFO A,
               SYS_CD_MAP B,
               SYS_CD_MAP C
         WHERE A.TDATE = #processDate#
           AND TO_CHAR(ROUND(NVL(A.FLOATTENOR,0)*12*30)) = B.SRC_CD (+) AND B.TYPE (+) = '104' /*만기 */
           AND A.INTERESTTERM = C.SRC_CD (+) AND C.TYPE (+) = #interestMonthCdType# /*이자지급주기 */
    <!-- IF_STRUCTURED_NOTE_INFO 추가 2011/04/22 -->
    UNION ALL
        SELECT A.CODE                   as key
              ,A.CODE                   as instrumentCode
              ,A.NAME                   as instrumentName
              ,CASE 
              	WHEN FRNTYPE = '1' THEN '1'
              	WHEN FRNTYPE = '2' THEN '5'
              	WHEN FRNTYPE = '3' THEN '2'
              	WHEN FRNTYPE = '4' THEN '3'
              	WHEN FRNTYPE = '5' THEN '3'
               END 			            as frnTypeCode
              ,NULL                     as issuerCd
              ,A.ISSUEDATE              as issueDt
              ,A.MATURITYDATE           as mrtyDt
              ,A.PRINCIPAL              as principal
              ,CASE WHEN LENGTH(A.MONEYTYPE)=3 THEN A.MONEYTYPE
                    ELSE SUBSTR(A.MONEYTYPE,6,3)
               END                      as ccyCd
              ,NVL(D.CD,A.INTERESTTERM)	as	couponFreqCd
              ,A.FIRSTPAYDATE           as firstCouponDt
              ,A.LASTPAYDATE            as lastCouponDt
              ,A.SPREAD                 as couponIrcSpread
     		  ,1						as	leverage
              ,NVL(A.FLOATCURVEID, #couponIrcCd#)
                                        as couponIrcCd
              ,NVL(B.CD,TO_CHAR(ROUND(NVL(A.FLOATTENOR,0)*12*30)))
              		                    as couponIrcMrtyCd
              ,
              CASE WHEN A.COUPON_IRC_TYPE_CD IN ('1','2') THEN A.COUPON_IRC_TYPE_CD
              	   ELSE 
              	   	CASE WHEN A.FRNTYPE IN ('1','2','3','4') THEN '1'
              			ELSE '2'
              		END
              END as couponIrcTypeCode
              ,A.COUPON_IRC_COUPON_FREQ_CD as couponIrcCouponFreqCode
              ,NULL   					as deferEndDate
              ,A.DEFER_TRM_PAY_COUPON   as deferPayCoupon
              ,A.INCOUPONRATE           as inRangeCoupon
              ,A.OUTCOUPONRATE          as outRangeCoupon
              ,'VB'                     as issueTypeCd /*가상 채권 */
<!--
              ,'$normalBondCd$'         as issueTypeCd /*일반 채권 */
 -->
              ,A.CAP_FLOOR_TYPE_CD      as capFloorTypeCode
              ,A.CAPRATE                as cap
              ,A.FLOORRATE              as floor
              ,NULL         			as couponAverageDayCount
		      ,NVL(C.CD, '0')			as  optionTypeCd
		      ,   NULL					as  firstExerciseDt
		      ,   NULL					as  exerciseFreqCd
		      ,A.IN_ARREARS_YN			as  inArrearsYn
		      ,CASE 
		      	WHEN A.DAY_COUNT_CONVENTION IN ('1','2','3','4','5') THEN A.DAY_COUNT_CONVENTION
		      	ELSE '1'
		       END						as  dayCountConvention
	          ,	A.GLOBAL_FLOOR			as	globalFloorReturn 
	          ,	A.CAP_COUPON			as	capCoupon
	          ,	A.FLOOR_COUPON			as	floorCoupon
          FROM $rasAccount$.IF_STRUCTURED_NOTE_INFO A,
               SYS_CD_MAP B,
               SYS_CD_MAP C,
               SYS_CD_MAP D
         WHERE A.TDATE = #processDate#
           AND TO_CHAR(ROUND(NVL(A.FLOATTENOR,0)*12*30)) = B.SRC_CD (+) 
           AND B.TYPE (+) = '104' /*만기 */
           AND A.OPTIONTYPE = C.SRC_CD (+) AND C.TYPE (+) = '212' /*옵션 유형 */
           AND A.INTERESTTERM = D.SRC_CD (+) AND D.TYPE (+) = #interestMonthCdType# /*이자지급주기 */
           AND A.FRNTYPE IN ('1','2','3','4','5')
      <!-- IF_DIGITAL_FRN_INFO 추가 2011/04/28 -->  
      <!--    
      UNION ALL
        SELECT A.CODE                   as key
              ,A.CODE                   as instrumentCode
              ,A.NAME                   as instrumentName
              ,A.FRNTYPE 			    as frnTypeCode
              ,A.ISSUER_CD        		as issuerCd
              ,A.ISSUEDATE              as issueDt
              ,A.MATURITYDATE           as mrtyDt
              ,A.PRINCIPAL              as principal
              ,CASE WHEN LENGTH(A.MONEYTYPE)=3 THEN A.MONEYTYPE
                    ELSE SUBSTR(A.MONEYTYPE,6,3)
               END                      as ccyCd
              ,CASE WHEN A.INTERESTTERM IN ('M', 'Q', 'S', 'A') THEN A.INTERESTTERM
                    WHEN A.INTERESTTERM IN ('W')                THEN 'M'
                    ELSE 'Q'
               END                      as couponFreqCd
              ,A.FIRSTPAYDATE           as firstCouponDt
              ,A.LASTPAYDATE            as lastCouponDt
              ,NULL                 	as couponIrcSpread
     		  ,NULL						as leverage
              ,NVL(A.FLOATCURVEID, #couponIrcCd#)
                                        as couponIrcCd                                        
              ,NVL(B.CD,TO_CHAR(ROUND(NVL(A.FLOATTENOR,0)*12*30)))
              		                    as couponIrcMrtyCd
              ,'1'	              		as couponIrcTypeCode
              ,NULL 					as couponIrcCouponFreqCode
              ,NULL                     as deferEndDate
              ,NULL   					as deferPayCoupon
              ,0           				as inRangeCoupon
              ,A.COUPONRATE / 100       as outRangeCoupon
              ,'$normalBondCd$'         as issueTypeCd /*일반 채권 */
              ,NULL      				as capFloorTypeCode
              ,A.CONDITIONRATE / 100    as cap
              ,NULL              		as floor
              ,NULL         			as couponAverageDayCount
		      ,CASE WHEN A.OPTIONTYPE = '1' THEN 'c'
		      		WHEN A.OPTIONTYPE = '2'	THEN 'p'
		       END						as optionTypeCd
		      ,NULL						as firstExerciseDt
		      ,NULL						as exerciseFreqCd
		      ,NULL						as inArrearsYn
		      ,NULL						as  dayCountConvention
        ,	NULL	as	globalFloorReturn 
        ,	NULL	as	capCoupon
        ,	NULL	as	floorCoupon
          FROM $rasAccount$.IF_DIGITAL_FRN_INFO A,
               SYS_CD_MAP B
         WHERE A.TDATE = #processDate#
           AND TO_CHAR(ROUND(NVL(A.FLOATTENOR,0)*12*30)) = B.SRC_CD (+) 
           AND B.TYPE (+) = '104' /*만기 */
       -->
      <!-- IF_RANGE_NOTE_INFO 추가 2011/04/18 -->
      <!--      
     UNION ALL
        SELECT A.CODE                   as key
              ,A.CODE                   as instrumentCode
              ,A.NAME                   as instrumentName
              ,A.FRNTYPE	            as frnTypeCode
              ,NULL              		as issuerCd
              ,A.ISSUEDATE              as issueDt
              ,A.MATURITYDATE           as mrtyDt
              ,A.PRINCIPAL              as principal
              ,CASE WHEN LENGTH(A.MONEYTYPE)=3 THEN A.MONEYTYPE
                    ELSE SUBSTR(A.MONEYTYPE,6,3)
               END                      as ccyCd
              ,CASE WHEN A.INTERESTTERM IN ('M', 'Q', 'S', 'A') THEN A.INTERESTTERM
                    WHEN A.INTERESTTERM IN ('W')                THEN 'M'
                    ELSE 'Q'
               END                      as couponFreqCd
              ,A.FIRSTPAYDATE           as firstCouponDt
              ,A.LASTPAYDATE            as lastCouponDt
              ,NULL                 	as couponIrcSpread
     		  ,NULL						as leverage
              ,NVL(A.FLOATCURVEID, #couponIrcCd#)
                                        as couponIrcCd                                        
              ,NVL(B.CD,TO_CHAR(ROUND(NVL(A.FLOATTENOR,0)*12*30)))
              		                    as couponIrcMrtyCd
              ,'1'	              		as couponIrcTypeCode
              ,NULL 					as couponIrcCouponFreqCode
              ,NULL                     as deferEndDate
              ,NULL   					as deferPayCoupon
              ,A.INCOUPONRATE           as inRangeCoupon
              ,A.OUTCOUPONRATE       	as outRangeCoupon
              ,'$normalBondCd$'         as issueTypeCd /*일반 채권 */
              ,NULL      				as capFloorTypeCode
              ,A.UPPERCONDITIONRATE    	as cap
              ,A.LOWERCONDITIONRATE		as floor
              ,NULL         			as couponAverageDayCount
		      ,'0'						as optionTypeCd
		      ,NULL						as firstExerciseDt
		      ,NULL						as exerciseFreqCd
		      ,NULL						as inArrearsYn
		      ,NULL						as dayCountConvention
		       ,	NULL	as	globalFloorReturn 
		       ,	NULL	as	capCoupon
		       ,	NULL	as	floorCoupon
		      
          FROM $rasAccount$.IF_RANGE_NOTE_INFO A,
               SYS_CD_MAP B
         WHERE A.TDATE = #processDate#
           AND TO_CHAR(ROUND(NVL(A.FLOATTENOR,0)*12*30)) = B.SRC_CD (+) 
           AND B.TYPE (+) = '104' /*만기 */          
      -->  
     <!-- IF_CMS_RANGE_ACCRUAL_NOTE_INFO 추가 2011/04/28 -->
     <!--        
     UNION ALL
        SELECT A.CODE                   as key
              ,A.CODE                   as instrumentCode
              ,A.NAME                   as instrumentName
              ,A.FRNTYPE	            as frnTypeCode
              ,NULL              		as issuerCd
              ,A.ISSUEDATE              as issueDt
              ,A.MATURITYDATE           as mrtyDt
              ,A.PRINCIPAL              as principal
              ,CASE WHEN LENGTH(A.MONEYTYPE)=3 THEN A.MONEYTYPE
                    ELSE SUBSTR(A.MONEYTYPE,6,3)
               END                      as ccyCd
              ,CASE WHEN A.INTERESTTERM IN ('M', 'Q', 'S', 'A') THEN A.INTERESTTERM
                    WHEN A.INTERESTTERM IN ('W')                THEN 'M'
                    ELSE 'Q'
               END                      as couponFreqCd
              ,A.FIRSTPAYDATE           as firstCouponDt
              ,A.LASTPAYDATE            as lastCouponDt
              ,NULL                 	as couponIrcSpread
     		  ,NULL						as leverage
              ,NVL(A.FLOATCURVEID, #couponIrcCd#)
                                        as couponIrcCd                                        
              ,NVL(B.CD,TO_CHAR(ROUND(NVL(A.FLOATTENOR,0)*12*30)))
              		                    as couponIrcMrtyCd
              ,'2'	              		as couponIrcTypeCode
              ,'M3' 					as couponIrcCouponFreqCode
              ,NULL                     as deferEndDate
              ,NULL   					as deferPayCoupon
              ,INCOUPONRATE				as inRangeCoupon
              ,OUTCOUPONRATE      		as outRangeCoupon
              ,'$normalBondCd$'         as issueTypeCd /*일반 채권 */
              ,NULL      				as capFloorTypeCode
              ,A.UPPERCONDITIONRATE     as cap
              ,A.LOWERCONDITIONRATE		as floor
              ,NULL         			as couponAverageDayCount
		      ,'0'						as optionTypeCd
		      ,NULL						as firstExerciseDt
		      ,NULL						as exerciseFreqCd
		      ,NULL						as inArrearsYn
		      ,NULL						as dayCountConvention
	        ,	NULL	as	globalFloorReturn 
	        ,	NULL	as	capCoupon
	        ,	NULL	as	floorCoupon
		      
          FROM $rasAccount$.IF_CMS_RANGE_ACCRUAL_NOTE_INFO A,
               SYS_CD_MAP B
         WHERE A.TDATE = #processDate#
           AND TO_CHAR(ROUND(NVL(A.FLOATTENOR,0)*12*30)) = B.SRC_CD (+) 
           AND B.TYPE (+) = '104' /*만기 */     
 	-->                  
    </select>

     <select id="getVanillaFrnDataList" parameterClass="map" resultClass="vanillaFrnData">
<!-- 
        SELECT B.TDATE                                    AS dt,
               B.CODE                                     AS instrumentCode ,
               NVL( B.KBPCLASS , C.ISSUER_RATING_CD)      AS issuerRatingCd,
               null 				                      AS creditRatingCode,
               NVL( B.NEXTPAYDATE, C.NEXT_COUPON_PAY_DT)  AS nextCouponPayDt,
               NVL( B.FACEINTEREST / 100 , C.NEXT_COUPON) AS nextCoupon,
               NULL                 AS couponAverageDayCount,
               NULL					AS termTotalAverageDayCount,
               NULL					AS accrualDayCount,
               NULL					AS accumulatedAverageCoupon
          FROM (SELECT CODE, TDATE, KBPCLASS,ISSUECODE,FACEINTEREST,NEXTPAYDATE
                  FROM $rasAccount$.IF_BOND_INFO
                 WHERE INTERESTTYPE IN ('21','29') OR INTERESTTYPE IN ('FIFL','SUFL')) B,
               (SELECT INSTRUMENT_CD, ISSUER_RATING_CD, NEXT_COUPON_PAY_DT, NEXT_COUPON
                  FROM VANILLA_FRN_DATA X
                 WHERE DT = (SELECT MAX(Y.DT) FROM CALENDAR Y WHERE Y.BDAY_YN='Y' AND Y.DT &lt; #processDate#)) C
         WHERE B.CODE       = C.INSTRUMENT_CD(+)
           AND B.TDATE 		= #processDate#
    UNION ALL
-->
        SELECT A.TDATE      	AS dt,
               A.CODE       	AS instrumentCode,
               A.DISCOUNTID 	AS issuerRatingCd,
               null 			AS creditRatingCode,
               null  			AS nextCouponPayDt,
               null         	AS nextCoupon,
               NULL             AS couponAverageDayCount,
               NULL				AS termTotalAverageDayCount,
               A.ACCRUALDAYCNT 	AS accrualDayCount,
               NULL				AS accumulatedAverageCoupon
               
          FROM $rasAccount$.IF_RANGE_ACCRUAL_NOTE_DATA A
         WHERE A.TDATE 		= #processDate#
    <!-- IF_FRN_DATA 추가 2010/08/24 -->
    UNION ALL
        SELECT A.TDATE          AS dt,
               A.CODE           AS instrumentCode,
               A.DISCOUNTID     AS issuerRatingCd,
               NULL 		    AS creditRatingCode,
               A.NEXTCOUPONDATE	AS nextCouponPayDt,
               A.NEXTCOUPONRATE AS nextCoupon,
               B.COUPON_AVG_CNT AS couponAverageDayCount,
               NULL				AS termTotalAverageDayCount,
               NULL				AS accrualDayCount,
               NULL				AS accumulatedAverageCoupon
          FROM $rasAccount$.IF_FRN_DATA A, $rasAccount$.IF_FRN_INFO B
         WHERE A.TDATE 		= #processDate#
           AND A.TDATE = B.TDATE AND A.CODE = B.CODE
    <!-- IF_STRUCTURED_NOTE_DATA 추가 2011/04/28-->
    UNION ALL
        SELECT A.TDATE          		AS dt,
               A.CODE          		 	AS instrumentCode,
               A.DISCOUNTID     		AS issuerRatingCd,
               NULL 		    		AS creditRatingCode,
               A.NEXTCOUPONDATE			AS nextCouponPayDt,
               A.NEXTCOUPONRATE 		AS nextCoupon,
               NULL                     AS couponAverageDayCount,
               A.TERM_TOT_AVG_DAY_CNT	AS termTotalAverageDayCount,
               A.ACCRUALDAYCNT			AS accrualDayCount,
               A.ACCUMULATE_AVG_COUPON	AS accumulatedAverageCoupon
          FROM $rasAccount$.IF_STRUCTURED_NOTE_DATA A,
               $rasAccount$.IF_STRUCTURED_NOTE_INFO B
         WHERE A.TDATE 		= #processDate#
           AND A.TDATE = B.TDATE AND A.CODE = B.CODE AND B.FRNTYPE IN ('1', '2', '3', '4', '5')
     <!-- IF_DIGITAL_FRN_DATA 추가 2011/04/28 -->
     <!-- 
    UNION ALL
        SELECT A.TDATE          AS dt,
               A.CODE           AS instrumentCode,
               A.DISCOUNTID     AS issuerRatingCd,
               NULL 		    AS creditRatingCode,
               A.NEXTCOUPONDATE	AS nextCouponPayDt,
               A.NEXTCOUPONRATE AS nextCoupon,
               NULL				AS termTotalAverageDayCount,
               NULL				AS accrualDayCount,
               NULL				AS accumulatedAverageCoupon
          FROM $rasAccount$.IF_DIGITAL_FRN_DATA A
         WHERE A.TDATE 		= #processDate#
	 -->         
    <!-- IF_RANGE_NOTE_DATA 추가 2011/04/28  -->
    <!-- 
    UNION ALL
        SELECT A.TDATE          AS dt,
               A.CODE           AS instrumentCode,
               A.DISCOUNTID     AS issuerRatingCd,
               NULL 		    AS creditRatingCode,
               A.NEXTCOUPONDATE	AS nextCouponPayDt,
               A.NEXTCOUPONRATE AS nextCoupon,
               NULL				AS termTotalAverageDayCount,
               NULL				AS accrualDayCount,
               NULL				AS accumulatedAverageCoupon
          FROM $rasAccount$.IF_RANGE_NOTE_DATA A
         WHERE A.TDATE 		= #processDate#
     -->
    <!-- IF_CMS_RANGE_ACCRUAL_NOTE_DATA 추가 2011/04/28 -->
    <!-- 
    UNION ALL
        SELECT A.TDATE          AS dt,
               A.CODE           AS instrumentCode,
               A.DISCOUNTID     AS issuerRatingCd,
               NULL 		    AS creditRatingCode,
               A.NEXTCOUPONDATE	AS nextCouponPayDt,
               A.NEXTCOUPONRATE AS nextCoupon,
               NULL				AS termTotalAverageDayCount,
               A.ACCRUALDAYCNT	AS accrualDayCount,
               NULL				AS accumulatedAverageCoupon
          FROM $rasAccount$.IF_CMS_RANGE_ACCRUAL_NOTE_DATA A
         WHERE A.TDATE 		= #processDate#
     -->
    </select>

    <insert id="infoInsert" parameterClass="vanillaFrnInfo">
     	INSERT INTO VANILLA_FRN_INFO
		(	INSTRUMENT_CD,             INSTRUMENT_NM,             VANILLA_FRN_TYPE_CD,       ISSUER_CD,
			ISSUE_DT,                  MRTY_DT,                   PRINCIPAL,                 CCY_CD,
			COUPON_FREQ_CD,            FIRST_COUPON_DT,           LAST_COUPON_DT,            COUPON_IRC_CD,
			COUPON_IRC_MRTY_CD,        COUPON_IRC_TYPE_CD,        COUPON_IRC_COUPON_FREQ_CD, COUPON_IRC_SPREAD,			LEVERAGE,
			DEFER_TRM_PAY_COUPON,      
			IN_RANGE_COUPON,           OUT_RANGE_COUPON,          ISSUE_TYPE_CD,             CAP_FLOOR_TYPE_CD,
			CAP,                       FLOOR,                     OPTION_TYPE_CD,
			FIRST_EXERCISE_DT,		   EXERCISE_FREQ_CD,		  IN_ARREARS_YN,			 DAY_COUNT_CONVENTION,
			GLOBAL_FLOOR_RTN,		   CAP_COUPON,				  FLOOR_COUPON,
			CRTN_USER_ID,              CRTN_TIME,				  LAST_MODIFY_USER_ID,       LAST_MODIFY_TIME )
     	VALUES
     	(	#instrumentCode#,		   #instrumentName#,		  #frnTypeCode#,			 #issuerCd#,
     	    #issueDt#,				   #mrtyDt#,				  #principal#,				 #ccyCd#,
     	    #couponFreqCd#	,		   #firstCouponDt#,			  #lastCouponDt#,  			 #couponIrcCd#,
     	    #couponIrcMrtyCd#,		   #couponIrcTypeCode#,  	  #couponIrcCouponFreqCode#, #couponIrcSpread#,			#leverage#,
     	    #deferPayCoupon#,          
     	    #inRangeCoupon#,		   #outRangeCoupon#,		  #issueTypeCd#,			 #capFloorTypeCode#,
     		#cap#,					   #floor#,					  #optionTypeCd#,
     		#firstExerciseDt#,         #exerciseFreqCd#,          #inArrearsYn#,              #dayCountConvention#,
     		#globalFloorReturn#,	   #capCoupon#,				  #floorCoupon#,
     		#userId#,				   sysDate,                   #userId#,	                 sysDate )
     </insert>

     <update id="infoUpdate" parameterClass="vanillaFrnInfo">
     	UPDATE VANILLA_FRN_INFO SET
			INSTRUMENT_NM = #instrumentName#,            VANILLA_FRN_TYPE_CD = #frnTypeCode#,
			ISSUER_CD = #issuerCd#,                      ISSUE_DT = #issueDt#,
			MRTY_DT = #mrtyDt#,                          PRINCIPAL = #principal#,
			CCY_CD = #ccyCd#,                            COUPON_FREQ_CD = #couponFreqCd#,
			FIRST_COUPON_DT = #firstCouponDt#,           LAST_COUPON_DT = #lastCouponDt#,
			COUPON_IRC_CD = #couponIrcCd#,               COUPON_IRC_MRTY_CD = #couponIrcMrtyCd#,
			COUPON_IRC_TYPE_CD = #couponIrcTypeCode#,    COUPON_IRC_COUPON_FREQ_CD = #couponIrcCouponFreqCode#,
			COUPON_IRC_SPREAD = #couponIrcSpread#,       LEVERAGE = #leverage#,
			DEFER_TRM_PAY_COUPON = #deferPayCoupon#,     
			IN_RANGE_COUPON = #inRangeCoupon#,           OUT_RANGE_COUPON = #outRangeCoupon#, 	 
			ISSUE_TYPE_CD = #issueTypeCd#,				 CAP_FLOOR_TYPE_CD = #capFloorTypeCode#,
			CAP = #cap#,								 FLOOR = #floor#,                             
			OPTION_TYPE_CD = #optionTypeCd#,
			FIRST_EXERCISE_DT = #firstExerciseDt#,       EXERCISE_FREQ_CD = #exerciseFreqCd#,
			IN_ARREARS_YN = #inArrearsYn#,				 DAY_COUNT_CONVENTION = #dayCountConvention#,
			GLOBAL_FLOOR_RTN = #globalFloorReturn#,				 CAP_COUPON =#capCoupon#,
			FLOOR_COUPON = #floorCoupon#,
			LAST_MODIFY_USER_ID = #userId#,			     LAST_MODIFY_TIME = sysDate
		 WHERE
			INSTRUMENT_CD = #instrumentCode#
     </update>

     <insert id="dataInsert" parameterClass="vanillaFrnData">
     	INSERT INTO VANILLA_FRN_DATA
     	(DT,INSTRUMENT_CD,ISSUER_RATING_CD,NEXT_COUPON_PAY_DT,NEXT_COUPON,ACCRUAL_DAY_CNT, 
     	 COUPON_AVG_DAY_CNT, SECT_TOT_AVG_DAY_CNT, ACCUMULATE_AVG_COUPON, CR_GRD_CD,
     	 CRTN_USER_ID,CRTN_TIME)
     	VALUES
     	(#dt#,#instrumentCode#,#issuerRatingCd#,#nextCouponPayDt#,#nextCoupon#,#accrualDayCount#,
     	 #couponAverageDayCount#, #termTotalAverageDayCount#, #accumulatedAverageCoupon#, #creditRatingCode#,
     	 #userId#,sysDate)
     </insert>
     
	<select id="getVanillaFrnOptionScheduleList" parameterClass="map" resultClass="vanillaFrnOptionSchedule">
		SELECT
			A.CODE				AS	instrumentCode
		,	A.OPTIONTYPE		AS	optionTypeCode
		,	A.OPTIONSTARTDATE	AS	optionStartDate
		,	A.OPTIONENDDATE		AS	optionEndDate
		,   A.STRIKE            AS  strike
		FROM
		 $rasAccount$.IF_STRUCTURED_NOTE_OPTION A
		,$rasAccount$.IF_STRUCTURED_NOTE_INFO B
		WHERE 
			A.CODE	= 	B.CODE
		AND	A.TDATE =   B.TDATE
		AND A.TDATE	=	#processDate#
		AND A.CODE = #key#
		AND B.FRNTYPE IN ('1','2','3','4','5')
	</select>

     <insert id="scheduleInsert" parameterClass="vanillaFrnOptionSchedule">
		INSERT INTO VANILLA_FRN_OPTION_SCHEDULE
		(INSTRUMENT_CD, OPTION_TYPE_CD, OPTION_STRT_DT, OPTION_END_DT, STRIKE)
		VALUES 
		(#instrumentCode#,#optionTypeCode#,#optionStartDate#,#optionEndDate#, #strike#)
	</insert>
	
	<delete id="scheduleDelete" parameterClass="map" >
		DELETE FROM VANILLA_FRN_OPTION_SCHEDULE WHERE INSTRUMENT_CD = #key#
	</delete>
     
	<select id="getVanillaFrnRangeNoteScheduleList" parameterClass="map" resultClass="vanillaFrnRangeNoteSchedule">
		SELECT A.CODE                as instrumentCode, 
		       A.COUPONSTARTDATE     as couponStartDate, 
		       A.COUPONENDDATE       as couponEndDate, 
		       A.UPPERRATE           as cap, 
		       A.LOWERRATE           as floor, 
		       A.INCOUPON            as inRangeCoupon, 
		       A.OUTCAPCOUPON        as outRangeCapCoupon, 
		       A.OUTFLOORCOUPON      as outRangeFloorCoupon
		  FROM  $rasAccount$.IF_STRUCTURED_NOTE_RN_SCHEDULE A
		       ,$rasAccount$.IF_STRUCTURED_NOTE_INFO B
		 WHERE A.CODE	= 	B.CODE
		   AND A.TDATE  = 	B.TDATE
		   AND A.TDATE = #processDate#
		   AND A.CODE = #key#
		   AND B.FRNTYPE IN ('1','2','3','4','5')
	</select>

    <insert id="rangeNoteScheduleInsert" parameterClass="vanillaFrnRangeNoteSchedule">
    	INSERT INTO VANILLA_FRN_RN_SCHEDULE (INSTRUMENT_CD, COUPON_STRT_DT, COUPON_END_DT, CAP, FLOOR, IN_RANGE_COUPON, OUT_RANGE_CAP_COUPON, OUT_RANGE_FLOOR_COUPON)
    	VALUES (#instrumentCode#, #couponStartDate#, #couponEndDate#, #cap#, #floor#, #inRangeCoupon#, #outRangeCapCoupon#, #outRangeFloorCoupon#)
   	</insert>
	
	<delete id="rangeNoteScheduleDelete" parameterClass="map" >
		DELETE FROM VANILLA_FRN_RN_SCHEDULE WHERE INSTRUMENT_CD = #key#
	</delete>
     
	<select id="getVanillaFrnRedemptionList" parameterClass="map" resultClass="vanillaFrnRedemption">
		SELECT A.CODE                as instrumentCode, 
		       A.REDEEMSTARTDATE     as redeemStartDate, 
		       A.REDEEMENDDATE       as redeemEndDate, 
		       A.UPPERRATE           as cap, 
		       A.LOWERRATE           as floor
		  FROM  $rasAccount$.IF_STRUCTURED_NOTE_REDEMPTION A
		       ,$rasAccount$.IF_STRUCTURED_NOTE_INFO B
		 WHERE A.CODE	= 	B.CODE
		   AND A.TDATE  = 	B.TDATE
		   AND A.TDATE = #processDate#
		   AND A.CODE = #key#
		   AND B.FRNTYPE IN ('1','2','3','4','5')
	</select>

    <insert id="redemptionInsert" parameterClass="vanillaFrnRedemption">
    	INSERT INTO VANILLA_FRN_REDEMPTION (INSTRUMENT_CD, REDEMPTION_STRT_DT, REDEMPTION_END_DT, CAP, FLOOR)
    	VALUES (#instrumentCode#, #redeemStartDate#, #redeemEndDate#, #cap#, #floor#)
   	</insert>
	
	<delete id="redemptionDelete" parameterClass="map" >
		DELETE FROM VANILLA_FRN_REDEMPTION WHERE INSTRUMENT_CD = #key#
	</delete>
     
</sqlMap>

